<main id="overview"> 
  <div class="wings">
    <% for(const wing of wings){ %>
    <div class="wing">
      <h3>W<%=wing.w%></h3>
      <% for(const step of wing.steps){ %>
        <% if(step.triggerID){ %><a href="/boss/<%= encodeURIComponent(step.triggerID) %>"
          class="wing-step <%=accounts.find(a=>a.completedSteps&&a.completedSteps.includes(step.id))?'wing-step-completed':'' %>"
        ><% } else {%><div
        class="wing-step <%=accounts.find(a=>a.completedSteps&&a.completedSteps.includes(step.id))?'wing-step-completed':'' %>"
      ><%} %>
      
        <img
          class="wing-boss-icon"
          src="./img/<%= step.img %>"
          alt="<%= step['name_'+lang] %>"
          >
        <svg class="wing-boss-border" viewBox="0 0 300 300">
          <% 
          let rot = 0;
          let border = 12;
          let width = 300;
          let outline = width * 4;
          let innerWidth = (width-(2*border));
          let innerOutline = innerWidth * 4;
          function formatX(x,w,offset){
            let x1 = x % w;
            if(x >= w*3){
              x1 =0;
            }else if(x >= w*2){
              x1 =w -x1;
            }else if(x >= w){
              x1 =w;
            }
            return x1+offset;
          }
          function formatY(y,h,offset){
            let x1 = y % h;
            if(y >= h*3){
              x1 = h-x1
            }else if(y >= h*2){
              x1 =h;
            }else if(y >= h){
              x1 =x1;
            }else{
              x1= 0;
            }
            return x1+offset;
          }
          for(const acc of accounts){ 
            let rotEnd = rot + (1 / accounts.length);
            let d = [];
            let startOutline = rot * outline;
            let endOutline = rotEnd * outline;
            let x1Outline = formatX(startOutline,width,0);
            let y1Outline = formatY(startOutline,width,0);
            let x2Outline = formatX(endOutline,width,0);
            let y2Outline = formatY(endOutline,width,0);

            let startInline = rot * innerOutline;
            let endInline = rotEnd * innerOutline;
            let x1Inline = formatX(startInline,innerWidth,border);
            let y1Inline = formatY(startInline,innerWidth,border);
            let x2Inline = formatX(endInline,innerWidth,border);
            let y2Inline = formatY(endInline,innerWidth,border);

            if(rotEnd === 1){
              x2Outline=0;
              y2Outline=0;
              x2Inline=border;
              y2Inline=border;
            }
            
            d.push(x1Outline+","+y1Outline);
            if(x1Outline !==x2Outline && y1Outline!==y2Outline){
              for(let i = Math.ceil(rot*4); i<= Math.floor(rotEnd*4);i++){
                if(i==0){
                  d.push(0+","+0);
                }else if(i==1){
                  d.push(width+","+0);
                }else if(i==2){
                  d.push(width+","+width);
                }else if(i==3){
                  d.push(0+","+width);
                }
              }
            }
            if(x1Outline ===x2Outline && y1Outline===y2Outline){
              for(let i = 0; i<= 3;i++){
                if(i==0){
                  d.push(0+","+0);
                }else if(i==1){
                  d.push(width+","+0);
                }else if(i==2){
                  d.push(width+","+width);
                }else if(i==3){
                  d.push(0+","+width);
                }
              }
            }
            d.push(x2Outline+","+y2Outline);
            d.push(x2Inline+","+y2Inline);
            if(x1Outline !==x2Outline && y1Outline!==y2Outline){
              for(let i = Math.floor(rotEnd*4); i>=Math.ceil(rot*4) ;i--){
                if(i==0){
                  d.push(border+","+border);
                }else if(i==1){
                  d.push((width-border)+","+border);
                }else if(i==2){
                  d.push((width-border)+","+(width-border));
                }else if(i==3){
                  d.push(border+","+(width-border));
                }
              }
            }
            if(x1Outline ===x2Outline && y1Outline===y2Outline){
              for(let i = 3; i>=1 ;i--){
                if(i==0){
                  d.push(border+","+border);
                }else if(i==1){
                  d.push((width-border)+","+border);
                }else if(i==2){
                  d.push((width-border)+","+(width-border));
                }else if(i==3){
                  d.push(border+","+(width-border));
                }
              }
            }
            d.push(x1Inline+","+y1Inline);
            rot = rotEnd;
            let opacity = 0.2;
            if(acc.completedSteps&&acc.completedSteps.includes(step.id)){
              opacity = 1;
            }
            %>
            <path d="<%='M '+d.join(' L ')+' Z'%>" style=<%='fill:'+acc.color+';opacity:'+opacity+';'%> />
          <% } %>
          
        </svg>
          <div class="wing-step-tooltip">
            <div class="wing-step-tooltip-title"><%= step['name_'+lang] %>:</div>
            <% if(totalKps.raidBossKp && totalKps.raidBossKp[step.id] > 0){ %> 
            <% 
              for(const acc of accounts){ 
              %>
              <div><span class="wing-step-tooltip-mark"><%=((acc.completedSteps&&acc.completedSteps.includes(step.id))?'âœ“':'')%></span><strong style=<%='color:'+acc.color+';'%>><%=acc.accountInfo.name%>:</strong> <span><%=(acc.kps.raidBossKp[step.id]||0)%> KP</span></div>
            <% } %>
            <% } else { %>
              <span class="li-display-number-details"><%= i18n.noKP %></span>
            <% } %>
          </div>
          <% if(step.triggerID){ %></a><% } else {%></div><%} %>
      
      <% } %> 
    </div>
    <% } %>
  </div>
  <div class="li-section">
    <div class="li-display">
      <img
        class="li-display-img"
        src="./img/1302744.png"
        alt="<%= i18n.labelLi %>"
      >
      <span class="li-display-number"><%= totalKps.li %></span>
      <span class="li-display-number-per-acc">
        <% for (const acc of accounts) {%> 
          <span class="li-display-acc">
            <span class="li-display-acc-name" style=<%='color:'+acc.color+';'%> ><%= acc.accountInfo.name%></span>:
            <span class="li-display-acc-kp" ><%= i18n.showLiLd(acc.kps.li||0)%></span>
          </span>
        <%}%>
      </span>
    </div>
    <div class="li-display">
      <img
        class="li-display-img"
        src="./img/1202328.png"
        alt="<%= i18n.labelFractal %>"
      >
      <span class="li-display-number"><%= totalKps.fractal %></span>
      
      <span class="li-display-number-per-acc">
        <% for (const acc of accounts) {%>
          <span class="li-display-acc">
            <span class="li-display-acc-name" style=<%='color:'+acc.color+';'%> ><%= acc.accountInfo.name%></span>:
            <span class="li-display-acc-kp" ><%= i18n.showKp(acc.kps.fractal||0)%></span>
          </span>
        <%}%>
      </span>
    </div>
    <div class="li-display">
      <img
        class="li-display-img"
        src="./img/2314490.png"
        alt="<%= i18n.labelBoneSkinner %>"
      >
      <span class="li-display-number"><%= totalKps.boneSkinner %></span>
      <span class="li-display-number-per-acc">
      <% for (const acc of accounts) {%>
        <span class="li-display-acc">
          <span class="li-display-acc-name" style=<%='color:'+acc.color+';'%> ><%= acc.accountInfo.name%></span>:
          <span class="li-display-acc-kp" ><%= i18n.showKp(acc.kps.boneSkinner||0)%></span>
        </span>
      <%}%>
      </span>
    </div>
    <!--<div class="li-display">
      <img
        class="li-display-img"
        src="./img/591443.png"
        alt="<%= i18n.labelZhaitaffy1000 %>"
      >
      <span class="li-display-number"><%= Math.floor(totalKps.zhaitaffy / 1000) %></span>
      <img
        class="li-display-img"
        src="./img/591442.png"
        alt="<%= i18n.labelZhaitaffy %>"
      >
      <span class="li-display-number"><%= (totalKps.zhaitaffy % 1000) %></span>
    </div>-->
  </div>
  <% for(const acc of accounts){ %>
  <% if(acc.kps && acc.kps.unopenedBoxes && acc.kps.unopenedBoxes.length > 0&& acc.accountInfo && acc.accountInfo.name){ %>
    <% for(const wing of wings){ %>
      <% for(const step of wing.steps){ %>
    <% for(const box of acc.kps.unopenedBoxes){ %>
      <% if(step.id === box.boss){ %>
      <div class="li-display">
        <img
          class="li-display-img"
          src="./img/1302747.png"
        >
        <span class="li-display-number"><%=box.item.count %>x <%= step['name_'+lang] %></span>
        <span class="li-display-number-details"><%= box.item["@char"] ||""%> <%= '('+acc.accountInfo.name+') '%></span>
        <% if(box.bossKp > 0){ %>
        <span class="li-display-number"><%=box.bossKp %>-<%=box.bossKp*5 %>x <img
          class="li-display-img"
          src="./img/<%= step.img %>"
        ></span>
    <% } %>  
    <span class="li-display-number"><%=box.item.count %>x <img
          class="li-display-img"
          src="./img/1302744.png"
        ></span>
      </div>
    <% } %>
    <% } %>
    <% } %>
    <% } %>
  <% } %>
  <% } %>
</main>